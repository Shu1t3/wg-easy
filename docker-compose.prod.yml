services:
  wg-easy:
    image: shu1t3/wg-easy-mongo:latest
    container_name: wg-easy
    command: npm start
    volumes:
       - ./src:/app/src
    ports:
      - "4815:4815/udp"
      - "4815:4815/tcp"
      - "2342:2342/tcp"
      - "2342:2342/udp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      LANG: ru
      PORT: 2342
      WG_HOST: ${WG_HOST}
      WG_PORT: 4815
      PASSWORD_HASH: ${PASSWORD_HASH}
      MONGO_URI: mongodb://${MONGO_LOGIN}:${MONGO_PASSWORD}@mongo:27017/wgeasy
      WEBUI_HOST: 0.0.0.0
      WG_DEFAULT_DNS: 76.76.2.22, 76.76.10.22
      WG_PERSISTENT_KEEPALIVE: 125
      UI_TRAFFIC_STATS: true
      UI_ENABLE_SORT_CLIENTS: true
    networks:
      - wg-easy-network
    depends_on:
      mongo:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:51821/api/session"]
      interval: 30s
      timeout: 10s
      retries: 3
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1

  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_LOGIN}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    restart: unless-stopped
    networks:
      - wg-easy-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh 127.0.0.1:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

volumes:
  mongodb_data:

networks:
  wg-easy-network:
    driver: bridge